{
  "Routes": [
    {
      "DownstreamPathTemplate": "/swagger/v1/swagger.json",
      "DownstreamScheme": "http",
      "ServiceName": "MSDemo",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "UseServiceDiscovery": true,
      "UpstreamPathTemplate": "/MSDemo/swagger/v1/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ],
      "DangerousAcceptAnyServerCertificateValidator": true //f you want to ignore SSL warnings / errors set the following in your Route config.
    },

    {
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/MSDemo/{url}",
      "UpstreamHttpMethod": [
        "Get",
        "Post"
      ],
      "ServiceName": "MSDemo",

      // LoadBalancer将决定负载均衡的算法，三种取值
      // RoundRobin：轮流发送
      // LeastConnection：将请求发往最空闲的那个服务器
      // NoLoadBalance：总是发往第一个请求或者是服务发现
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [], //白名单
        "EnableRateLimiting": true, //是否启用限流
        "Period": "10s", //统计时间段
        "Limit": 30, //在统计时间段内允许的最大请求数量。即：10秒内只允许30次请求
        "PeriodTimespan": 5 //多少秒之后客户端可以重试
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
        "DurationOfBreak": 5, //熔断的时间，单位为秒
        "TimeoutValue": 30000 //如果下游请求的处理时间超过多少则自动将请求设置为超时
      },

      //缓存
      "FileCacheOptions": {
        "TtlSeconds": 3,
        "Region": "MSDemo"
      },
      // 下游API服务需要授权后才能访问
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "MSDemoKey",
        "AllowedScopes": []
      },
      "UseServiceDiscovery": true,
      "AddHeadersToRequest": {
        "KanekoUserData": "Claims[KanekoUserData] > value"
      }
    },

    //把ID4_Server认证授权服务器也配置进来,但它不再Ocelot层次上加密,单纯的进行转发
    {
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/auth/{url}",
      "UpstreamHttpMethod": [
        "Get",
        "Post"
      ],
      "ServiceName": "KanekoIdentityCenter",
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询算法：依次调用在consul中注册的服务器
      },
      "UseServiceDiscovery": true
    }
  ],
  "GlobalConfiguration": {

    "RateLimitOptions": {
      "DisableRateLimitHeaders": false,
      "QuotaExceededMessage": "您访问的网站流量处于流量高峰期，您的请求被截断了",
      "HttpStatusCode": 888,
      "ClientIdHeader": "clientId"
    },

    // 使用Consul服务治理
    "ServiceDiscoveryProvider": {
      "Host": "192.168.45.133",
      "Port": 8500
    }
  },

  "Urls": "http://192.168.0.106:6001",

  "KanekoIdentityCenter": {
    "Authority": "http://192.168.0.106:12345",
    "EnableCaching": true,
    "CacheDurationMinutes": 30,
    "ClientId": "kanekoApi",
    "ClientSecret": "Kaneko@123!"
  },

  "Redis": {
    "Enabled": true,
    "HostName": "192.168.45.133",
    "Port": "6379",
    "InstanceName": "kaneko",
    "UserName": "",
    "Password": ""
  }
}